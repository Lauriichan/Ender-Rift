buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    mavenCentral()
    mavenLocal()
    maven {
        url "$projectDir/../CommonMaven"
    }
    maven {
        url 'https://dogforce-games.com/maven'
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url 'https://maven.mcmoddev.com/'
    }
    maven {
        url "https://github.com/TehNut/temporary-maven-thing/tree/master/maven"
    }
    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    flatDir { dirs 'deps' }
}

version = "2.5.0"
group= "dev.gigaherz.enderrift"
archivesBaseName = "EnderRift-UNKNOWN"

project.afterEvaluate {
    archivesBaseName = "EnderRift-${project.MC_VERSION}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

minecraft {
    mappings channel: 'official', version: '1.19'
    //mappings channel: 'parchment', version: '2022.05.02-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            forceExit false

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            forceExit false

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'enderrift', '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            forceExit false

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    shade
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19-41.0.17'

    compileOnly 'org.jetbrains:annotations:20.1.0'

    //implementation fg.deobf("dev.gigaherz.guidebook:Guidebook-1.18.2:3.4.0")

    shade implementation(fg.deobf("dev.gigaherz.graph:GraphLib3:3.0.2"))

    //compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.0.194:api")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.0.194")

    //compileOnly fg.deobf("mcp.mobius.waila:Hwyla:1.10.8-B72_1.15.2")

    //compile fileTree(dir: 'libs', include: '*.jar')

    //runtimeOnly fg.deobf("flatdir:Industrial-Reborn-1.16.1:0.7.0")
    //runtimeOnly fg.deobf("flatdir:tesseract:1.0.7-mc1.16")

    // TheOneProbe - 1.19-6.0.1
    compileOnly fg.deobf("curse.maven:the-one-probe-245211:3825695")
    runtimeOnly fg.deobf("curse.maven:the-one-probe-245211:3825695")
}

jar {
    archiveClassifier = 'slim'
}

shadowJar {
    classifier = ''
    configurations = [project.configurations.shade]
    relocate 'dev.gigaherz.graph3', "${project.group}.shadow.graphlib3"
}

reobf {
    shadowJar { }
}

tasks.build.dependsOn reobfShadowJar

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title": "enderrift",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

artifacts {
    archives shadowJar
}
